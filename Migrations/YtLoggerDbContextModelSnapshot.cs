// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using yt_logger.Data;

#nullable disable

namespace yt_logger.Migrations
{
    [DbContext(typeof(YtLoggerDbContext))]
    partial class YtLoggerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("yt_logger.Data.Entities.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("yt_logger.Data.Entities.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastLogDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("yt_logger.Data.Entities.PlaylistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("LogId")
                        .HasColumnType("int");

                    b.Property<int?>("LogId1")
                        .HasColumnType("int");

                    b.Property<int?>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<string>("RefId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VideoOwnerChannelId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VideoOwnerChannelTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("VideoPublishedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("LogId");

                    b.HasIndex("LogId1");

                    b.HasIndex("PlaylistId");

                    b.ToTable("PlaylistItems");
                });

            modelBuilder.Entity("yt_logger.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("yt_logger.Data.Entities.PlaylistItem", b =>
                {
                    b.HasOne("yt_logger.Data.Entities.Log", null)
                        .WithMany("Added")
                        .HasForeignKey("LogId");

                    b.HasOne("yt_logger.Data.Entities.Log", null)
                        .WithMany("Deleted")
                        .HasForeignKey("LogId1");

                    b.HasOne("yt_logger.Data.Entities.Playlist", null)
                        .WithMany("PlaylistItems")
                        .HasForeignKey("PlaylistId");
                });

            modelBuilder.Entity("yt_logger.Data.Entities.Log", b =>
                {
                    b.Navigation("Added");

                    b.Navigation("Deleted");
                });

            modelBuilder.Entity("yt_logger.Data.Entities.Playlist", b =>
                {
                    b.Navigation("PlaylistItems");
                });
#pragma warning restore 612, 618
        }
    }
}
